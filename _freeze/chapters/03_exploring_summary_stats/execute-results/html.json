{
  "hash": "5f0d02976f4daadbbc8c6eb66acfc0cd",
  "result": {
    "markdown": "---\nexecute: \n  echo: true\n  eval: true\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123) # for reproducibility\n\n# Load required packages\nlibrary(here)\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(maps)\nlibrary(ggrepel)\n```\n:::\n\n\n# Exploring and visualizing summary statistics\n\nHere, we will describe the code to (visually) explore summary statistics of \nthe BioSamples included in the SEA 2.0.\n\n## Exploratory data analyses\n\nTo start, let's load the sample metadata information.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(here(\"data\", \"sample_metadata_complete.rda\"))\n```\n:::\n\n\n### Number of samples per body part\n\nHere, we will visualize the number of samples per body part as a bar plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get data frame of counts\nsamples_per_body_part <- sample_metadata_complete |>\n    count(Part) |>\n    arrange(-n) |>\n    mutate(\n        Part = str_to_title(Part),\n        Part = factor(Part, levels = Part)\n    )\n\n# Plot data\np_samples_per_body_part <- ggplot(\n    samples_per_body_part, aes(x = n, y = Part)\n) +\n    geom_bar(stat = \"identity\", fill = \"gray50\") +\n    geom_text(aes(label = n), hjust = -0.2) +\n    theme_minimal() +\n    labs(\n        x = \"Number of BioSamples\", y = \"\",\n        title = \"Number of BioSamples per body part\"\n    ) +\n    scale_x_continuous(limits = c(0, 2000))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save plot to file\nsave(\n    p_samples_per_body_part, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_samples_per_body_part.rda\")\n)\n```\n:::\n\n\n### Sequencing technology and library layout\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a data frame of counts for sequencing technology\nseqtech_count <- sample_metadata_complete |>\n    mutate(\n        Instrument = str_replace_all(\n            Instrument, c(\n                \"^HiSeq X Ten$\" = \"Illumina HiSeq X Ten\",\n                \"^Illumina HiSeq X$\" = \"Illumina HiSeq X Ten\"\n            )\n        )\n    ) |>\n    count(Instrument) |>\n    arrange(-n) |>\n    mutate(\n        Instrument = factor(Instrument, levels = Instrument),\n        Group = \"Sequencing instrument\"\n    ) |>\n    rename(Variable = Instrument)\n\n# Get a data frame of counts for library layout\nlayout_count <- sample_metadata_complete |>\n    mutate(Layout = str_replace_all(Layout, c(\n        \"PAIRED\" = \"Paired\",\n        \"SINGLE\" = \"Single\"\n    ))) |>\n    count(Layout) |>\n    arrange(-n) |>\n    mutate(\n        Layout = factor(Layout, levels = Layout),\n        Group = \"Layout\"\n    ) |>\n    rename(Variable = Layout)\n\n# Plot data\np_seqtech_layout_count <- bind_rows(\n    seqtech_count, layout_count\n) |>\n    mutate(prop = n / nrow(sample_metadata_complete)) |>\n    ggplot(aes(x = prop, y = Variable)) +\n    geom_bar(aes(fill = Group), stat = \"identity\", show.legend = FALSE) +\n    ggsci::scale_fill_jama() +\n    facet_grid(Group ~ ., scales = \"free\", space = \"free\") +\n    geom_text(aes(label = n), hjust = -0.2) +\n    theme_bw() +\n    scale_x_continuous(limits = c(0, 1)) +\n    labs(\n        title = \"Summary statistics on library layout and sequencing instrument\",\n        x = \"Relative frequency\", y = \"\"\n    )\n\np_seqtech_layout_count\n```\n\n::: {.cell-output-display}\n![](03_exploring_summary_stats_files/figure-html/sequencing-tech-and-layout-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save plot to file\nsave(\n    p_seqtech_layout_count, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_seqtech_layout_count.rda\")\n)\n```\n:::\n\n\n## Time series data\n\nHere, we will explore the evolution of some variables (e.g., body part, \nsequencing technology, etc.) over time, as well as a cumulative distribution\nof samples over time.\n\n### Number of samples over time\n\nHere, we will plot a cumulative sum of the number of samples over time, \nhighlighting what changed since the Soybean Expression Atlas 1.0 (last\ndownload on July 21, 2017).\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_nsamples_over_time_cumsum <- sample_metadata_complete |>\n    select(Date) |>\n    mutate(\n        Date = as.Date(Date),\n        N = 1\n    ) |>\n    arrange(Date) |>\n    mutate(cumulative_sum = cumsum(N)) |>\n    # Plot\n    ggplot(aes(x = Date, y = cumulative_sum, group = 1)) +\n    geom_line() +\n    scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") + \n    theme_minimal() +\n    labs(\n        title = \"Cumulative number of samples over time\",\n        subtitle = \"Samples that were not included in the SEA 2.0 were not displayed\",\n        x = \"\", y = \"Number of samples\"\n    ) +\n    scale_y_continuous(breaks = seq(0, 6000, 1000)) +\n    geom_vline(\n        xintercept = as.Date(\"2017-07-21\"), color = \"brown3\", linetype = 2\n    ) +\n    annotate(\n        \"text\", x = as.Date(\"2015-06-01\"), y = 3500, \n        label = \"Last download for the SEA 1.0\", color = \"gray20\"\n    ) +\n    annotate(\n        geom = \"curve\", \n        x = as.Date(\"2015-01-01\"), xend = as.Date(\"2017-03-01\"),\n        y = 3200, yend = 2500, \n        curvature = .2, arrow = arrow(length = unit(2, \"mm\"))\n    )\n\np_nsamples_over_time_cumsum\n```\n\n::: {.cell-output-display}\n![](03_exploring_summary_stats_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save plot object\nsave(\n    p_nsamples_over_time_cumsum, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_nsamples_over_time_cumsum.rda\")\n)\n```\n:::\n\n\n### Sequencing technologies and library layout over time\n\nHere, we will explore how sequencing technologies and library layout \nevolved over time by taking a look at the deposited samples. We want\nto find out whether a particular technology was common in the early years,\nbut was quickly replaced by more modern technologies, for example. For \nlibrary layout, we hypothesize that single-end sequencing was more\ncommon in the early years, but paired-end sequencing has now\nbecome more popular.\n\n\n::: {.cell fig.dpi='200'}\n\n```{.r .cell-code}\n# Plot cumulative number of samples for each sequencing instrument over time\np_seqtech_timeseries <- sample_metadata_complete |>\n    # Select only Date and Instrument and add dummy variable N with count\n    select(Instrument, Date) |>\n    mutate(\n        Instrument = str_replace_all(\n            Instrument, c(\n                \"^HiSeq X Ten$\" = \"Illumina HiSeq X Ten\",\n                \"^Illumina HiSeq X$\" = \"Illumina HiSeq X Ten\"\n            )\n        ),\n        Date = as.Date(Date),\n        N = 1\n    ) |>\n    # Remove instruments with <50 samples\n    inner_join(\n        seqtech_count |> filter(n >= 50) |> select(Instrument = Variable)\n    ) |>\n    arrange(Date) |>\n    # Calculate cumulative sum per instrument\n    group_by(Instrument) |>\n    mutate(cumulative_sum = cumsum(N)) |>\n    ungroup() |>\n    mutate(\n        Instrument = factor(\n            Instrument, levels = seqtech_count |> filter(n >= 50) |> pull(Variable)\n        )\n    ) |>\n    ggplot(aes(x = Date, y = cumulative_sum, group = Instrument)) +\n    geom_line(aes(color = Instrument)) +\n    ggsci::scale_color_d3(\"category20\") +\n    scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") + \n    theme_minimal() +\n    labs(\n        title = \"Cumulative number of samples using each sequencing instrument over time\",\n        subtitle = \"Instruments with <50 samples are not displayed\",\n        x = \"\", y = \"Number of samples\"\n    ) +\n    ylim(0, 2000) +\n    theme(legend.position = \"bottom\")\n\n\n# Plot cumulative number of samples for each library layout over time\np_layout_timeseries <- sample_metadata_complete |>\n    select(Layout, Date) |>\n    mutate(\n        Layout = str_replace_all(Layout, c(\n            \"PAIRED\" = \"Paired\",\n            \"SINGLE\" = \"Single\"\n        )),\n        Date = as.Date(Date),\n        N = 1\n    ) |>\n    arrange(Date) |>\n    # Calculate cumulative sum per instrument\n    group_by(Layout) |>\n    mutate(cumulative_sum = cumsum(N)) |>\n    ungroup() |>\n    ggplot(aes(x = Date, y = cumulative_sum, group = Layout)) +\n    geom_line(aes(color = Layout)) +\n    scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") + \n    theme_minimal() +\n    ggsci::scale_color_jama() +\n    labs(\n        title = \"Cumulative number of samples using each library layout over time\",\n        x = \"\", y = \"Number of samples\"\n    ) +\n    ylim(0, 3000) +\n    theme(legend.position = \"bottom\")\n\n\n# Plot number of samples for each body part over time\np_bodypart_timeseries <- sample_metadata_complete |>\n    select(Part, Date) |>\n    # Remove body parts with <50 samples\n    inner_join(\n        count(sample_metadata_complete, Part) |> filter(n >= 50) |> select(Part)\n    ) |>\n    mutate(\n        Part = str_to_title(Part),\n        Date = as.Date(Date),\n        N = 1\n    ) |>\n    mutate(\n        Part = factor(\n            Part, levels = count(sample_metadata_complete, Part) |> \n                arrange(-n) |>\n                filter(n >= 50) |> \n                mutate(Part = str_to_title(Part)) |>\n                pull(Part)\n        )\n    ) |>\n    arrange(Date) |>\n    # Calculate cumulative sum per instrument\n    group_by(Part) |>\n    mutate(cumulative_sum = cumsum(N)) |>\n    ungroup() |>\n    ggplot(aes(x = Date, y = cumulative_sum, group = Part)) +\n    geom_line(aes(color = Part)) +\n    scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") + \n    theme_minimal() +\n    ggsci::scale_color_d3(\"category20\") +\n    labs(\n        title = \"Cumulative number of samples for each body part over time\",\n        subtitle = \"Body parts with <50 samples are not displayed\",\n        x = \"\", y = \"Number of samples\"\n    ) +\n    ylim(0, 2000) +\n    theme(legend.position = \"bottom\") +\n    guides(color = guide_legend(nrow = 2))\n\np_seqtech_timeseries / p_layout_timeseries / p_bodypart_timeseries\n```\n\n::: {.cell-output-display}\n![](03_exploring_summary_stats_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Saving each plot\nsave(\n    p_seqtech_timeseries, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_seqtech_timeseries.rda\")\n)\n\nsave(\n    p_layout_timeseries, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_layout_timeseries.rda\")\n)\n\nsave(\n    p_bodypart_timeseries, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_bodypart_timeseries.rda\")\n)\n```\n:::\n\n\n## Number of samples per country\n\nIn this section, we will calculate and visualize the number of samples\nper country to understand who contributes with most samples to databases. \nWe also want to look for associations between the number of samples and \nsoybean production.\n\nGeographic information will be obtainded from the \nfile `sra_run_selector_2023-12-16.txt`, which was downloaded from SRA Run\nSelector. In details, we searched \"Glycine max[ORGN] AND RNA-seq[STRA]\"\non NCBI's SRA, clicked on *Send results to Run selector*, and downloaded \nthe metadata for all samples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples_per_country <- read_csv(\n    here(\"data\", \"sra_run_selector_2023-02-16.txt\")\n) |> \n    inner_join(sample_metadata_complete |> rownames_to_column(\"BioSample\")) |>\n    distinct(BioSample, .keep_all = TRUE) |>\n    select(BioSample, BioProject, `Center Name`, geo_loc_name_country, geo_loc_name) |>\n    mutate(\n        Country = case_when(\n            is.na(geo_loc_name_country) | \n                str_detect(geo_loc_name_country, \"uncalculated\") ~ `Center Name`,\n            TRUE ~ geo_loc_name_country\n        )\n    ) |>\n    mutate(\n        Country = str_replace_all(\n            Country, c(\n                \"JGI\" = \"USA\",\n                \"HORTICULTURE AND CROP SCIENCE, OHIO STATE UNIVERSITY\" = \"USA\",\n                \"FUJIAN AGRICULTURE AND FORESTRY UNIVERSITY\" = \"China\",\n                \"MICHIGAN STATE UNIVERSITY\" = \"USA\",\n                \"Hong Kong\" = \"China\",\n                \"UNIVERSIDADE FEDERAL DE LAVRAS\" = \"Brazil\",\n                \"UNIVERSITY OF GEORGIA\" = \"Georgia\",\n                \"INSTITUTE OF GENETICS AND DEVELOPMENTAL BIOLOGY, C\" = \"China\",\n                \"RIKEN_CSRS\" = \"Japan\",\n                \"KUNMING INSTITUTE OF ZOOLOGY\" = \"China\",\n                \"ADAM MICKIEWICZ UNIVERSITY POZNAN\" = \"Poland\",\n                \"NICS\" = \"India\",\n                \"GUANGZHOU UNIVERSITY\" = \"China\",\n                \"ANYANG INSTITUTE OF TECHNOLOGY\" = \"China\",\n                \"BRAZILIAN AGRICULTURAL RESEARCH CORPORATION - EMBRAPA\" = \"Brazil\",\n                \"UNIVERSITY OF MISSOURI AT COLUMBIA\" = \"USA\",\n                \"THE OHIO STATE UNIVERSITY\" = \"USA\",\n                \"SICHUAN AGRICULTURAL UNIVERSITY\" = \"China\",\n                \"NORTHWEST A&F UNIVERSITY\" = \"China\",\n                \"NORTHEAST INSTITUTE OF GEOGRAPHY AND AGROECOLOGY\" = \"China\",\n                \".*Switzerland.*\" = \"Switzerland\",\n                \"NATIONAL ACADEMY OF AGRICULTURAL SCIENCE\" = \"India\",\n                \"UNIVERSITY OF MELBOURNE\" = \"Australia\",\n                \"TOTTORI\" = \"Japan\",\n                \"TOKYO_AGRITECH\" = \"Japan\",\n                \"JILIN NORMAL UNIVERSITY\" = \"China\",\n                \"UNIVERSIDADE FEDERAL DO RIO DE JANEIRO\" = \"Brazil\",\n                \"UNITED STATES DEPARTMENT OF AGRICULTURE\" = \"USA\",\n                \"SOUTH CHINA AGRICULTURAL UNIVERSITY\" = \"China\",\n                \"NUGSS\" = \"Japan\",\n                \"LAVAL UNIVERSITY\" = \"Canada\",\n                \"KOCHI\" = \"India\",\n                \"CHUBU\" = \"Japan\",\n                \"USDA-ARS\" = \"USA\",\n                \"PURDUE UNIVERSITY\" = \"USA\",\n                \"ICS-CAAS\" = \"China\",\n                \"AGRICULTURE & AGRI-FOOD CANADA\" = \"Canada\",\n                \"UNIVERSITY OF ARIZONA\" = \"USA\",\n                \"QINGDAO AGRICULTURAL UNIVERSITY\" = \"China\",\n                \"CUHK\" = \"China\", \n                \"THE UNIVERSITY OF QUEENSLAND\" = \"Australia\",\n                \"SEOUL NATIONAL UNIVERSITY\" = \"South Korea\",\n                \"NANJING AGRICULTURAL UNIVERSITY\" = \"China\",\n                \"INSTITUTE OF MICROBIOLOGY, CHINESE ACADEMY OF SCIENCES\" = \"China\"\n            )\n        )\n    ) |>\n    filter(\n        !Country %in% c(\n            \"Mehran Dastmalchi\", \"Arun kumaran Anguraj vadivel\"\n        )\n    ) |>\n    arrange(Country)\n\n\n# Get geographic information for samples from \"GEO\"\nget_bioproject_submission <- function(bioproject_ids) {\n    \n    submission <- Reduce(rbind, lapply(bioproject_ids, function(x) {\n        \n        url <- file.path(\"https://www.ncbi.nlm.nih.gov/bioproject\", x)\n        s <- rvest::read_html(url) |>\n            rvest::html_table() |>\n            pluck(1) |>\n            filter(X1 == \"Submission\") |>\n            pull(X2)\n        \n        sdf <- data.frame(BioProject = x, Submission = s)\n        return(sdf)\n    }))\n    \n    return(submission)\n}\n\ngeo_projects <- samples_per_country |>\n    filter(Country == \"GEO\") |>\n    pull(BioProject) |>\n    unique()\n\ngeo_projects_info <- get_bioproject_submission(geo_projects)\ngeo_projects_location <- geo_projects_info |>\n    mutate(\n        Submission = str_replace_all(\n            Submission, \".*\\\\d{1,2}-[A-Z][a-z]{2}-\\\\d{4}\", \"\"\n        )\n    ) |>\n    mutate(\n        Country = str_replace_all(\n            Submission, c(\n                \".*Illinois.*\" = \"USA\",\n                \".*Universidade.*\" = \"Brazil\",\n                \".*USDA.*\" = \"USA\",\n                \".*Nanjing.*\" = \"China\",\n                \".*United States.*\" = \"USA\",\n                \".*US .*\" = \"USA\",\n                \".*UNCC.*\" = \"USA\",\n                \".*Donald Danforth.*\" = \"USA\",\n                \".*Missouri.*\" = \"USA\",\n                \".*Georgia.*\" = \"Georgia\",\n                \".*Embrapa.*\" = \"Brazil\",\n                \".*UFRGS.*\" = \"Brazil\",\n                \".*California.*\" = \"USA\",\n                \".*Virginia Tech.*\" = \"USA\",\n                \".*Chinese.*\" = \"China\",\n                \".*Purdue.*\" = \"USA\",\n                \".*NC State University.*\" = \"USA\",\n                \".*Hangzhou.*\" = \"China\",\n                \".*Iowa.*\" = \"USA\",\n                \".*Institute of Genetics and Developmental Biology.*\" = \"China\",\n                \".*Nanchang.*\" = \"China\",\n                \".*Tennessee.*\" = \"USA\",\n                \".*South Dakota.*\" = \"USA\",\n                \".*North Carolina.*\" = \"USA\",\n                \".*Shandong.*\" = \"China\",\n                \".*Zhejiang.*\" = \"China\",\n                \".*China.*\" = \"China\",\n                \".*Wisconsin.*\" = \"USA\",\n                \".*West Virginia.*\" = \"USA\",\n                \".*Fujian.*\" = \"China\",\n                \".*INRA.*\" = \"France\",\n                \".*Salk.*\" = \"USA\",\n                \".*Tottori.*\" = \"Japan\",\n                \".*Kangwon.*\" = \"South Korea\",\n                \".*Shanghai.*\" = \"China\",\n                \".*Jilin.*\" = \"China\",\n                \".*Michigan.*\" = \"USA\",\n                \".*Northeast Agricultural University.*\" = \"China\",\n                \".*USA.*\" = \"USA\",\n                \".*IGDB.*\" = \"China\"\n            )\n        )\n    )\n\n# Create a final table of samples per country\nsamples_nongeo <- samples_per_country |>\n    filter(Country != \"GEO\") |> \n    select(BioSample, Country)\n\nsamples_geo <- geo_projects_location |>\n    select(BioProject, Country) |>\n    inner_join(samples_per_country |> select(BioProject, BioSample)) |>\n    select(BioSample, Country)\n\nfinal_samples_per_country <- bind_rows(\n    samples_nongeo, samples_geo\n) |>\n    count(Country) |>\n    arrange(-n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nThere are 27 countries in the list of submitters. However, for a better \nvisualization, we will only include the top 20 countries. Seven countries\ncontributed with only 1 sample each, and they are Belgium, Norway, Romania,\nSerbia, Taiwan, Ukraine, and Uzbekistan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get world map\nworld <- map_data(\"world\") # World map\n\n# Get one point per country (capital)\nworld_capital <- world.cities[world.cities$capital == 1, ]\n\n# SRA samples in the world\nworld_samples <- inner_join(\n    final_samples_per_country |> slice_head(n = 20), \n    world_capital |> rename(Country = country.etc)\n) |>\n    rownames_to_column(\"code\") |>\n    mutate(\n        log2_n = log2(n),\n        log10_n = log10(n)\n    )\n\n# Create color code for countries\nfinal_world <- left_join(\n    world, world_samples, by = c(\"region\" = \"Country\")\n) |>\n    mutate(\n        code = as.numeric(code),\n        code = tidyr::replace_na(code, 0),\n        code = as.factor(code)\n    )\n\n\n# Plot map with blue scale and bubbles\np_map_samples_per_country <- ggplot() +\n    geom_map(\n        data = final_world, map = world, \n        aes(long.x, lat.x, map_id = region, fill = as.numeric(log2_n)),\n        color = \"white\", alpha = 0.7, size = 0.1, show.legend = FALSE\n    ) +\n    labs(fill = expression(paste(log[2], \" N\"))) +\n    scale_fill_gradient(low = \"#56B1F7\", high = \"#132B43\") +    \n    geom_point(\n        data = world_samples, aes(x = long, y = lat, size = n), \n        color = \"brown3\", alpha = 0.9, show.legend = FALSE\n    ) +\n    guides(size = FALSE, color = FALSE) +\n    geom_label_repel(\n        data = world_samples, \n        aes(\n            x = long, y = lat, \n            label = paste0(1:nrow(world_samples), \". \", Country)\n        ), \n        max.overlaps = 20,\n        size = 2.9\n    ) +\n    theme_void() +\n    labs(\n        title = \"Geographic distribution of the top 20 countries in number of samples\"\n    )\n\n\n# Plot bar plot of number of samples per country\n## Top world soybean producers: http://soystats.com/international-world-soybean-production/\ntop_producers <- c(\n    \"Brazil\", \"USA\", \"Argentina\", \"China\", \"India\", \"Paraguay\", \"Canada\"\n)\n\np_barplot_samples_per_country <- final_samples_per_country |>\n    slice_head(n = 20) |>\n    mutate(Country = factor(Country, levels = rev(Country))) |>\n    ggplot(aes(x = n, y = Country)) +\n    geom_col(\n        aes(fill = ifelse(Country %in% top_producers, \"steelblue3\", \"grey60\"))\n    ) +\n    scale_fill_identity() +\n    #geom_col(fill = \"grey50\") +\n    geom_text(aes(label = n), hjust = -0.2) +\n    theme_minimal() +\n    labs(\n        title = \"Top 20 countries in number of samples\",\n        subtitle = \"Blue bars indicate world leaders in soybean production.\",\n        x = \"Number of samples\", y = \"\"\n    ) +\n    xlim(0, 3500)\n\nwrap_plots(\n    p_map_samples_per_country, p_barplot_samples_per_country,\n    widths = c(2, 1)\n)\n```\n\n::: {.cell-output-display}\n![](03_exploring_summary_stats_files/figure-html/unnamed-chunk-10-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save plots to files\nsave(\n    p_map_samples_per_country, final_world, world, world_samples,\n    compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_map_samples_per_country.rda\")\n)\n\nsave(\n    p_barplot_samples_per_country, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"p_barplot_samples_per_country.rda\")\n)\n```\n:::\n\n\n## Session information {.unnumbered}\n\nThis document was created under the following conditions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21)\n os       Ubuntu 20.04.5 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Brussels\n date     2023-06-23\n pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)\n colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)\n digest        0.6.31  2022-12-11 [1] CRAN (R 4.3.0)\n dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)\n evaluate      0.20    2023-01-17 [1] CRAN (R 4.3.0)\n fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.0)\n farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)\n fastmap       1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)\n generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.1   2023-02-10 [1] CRAN (R 4.3.0)\n ggrepel     * 0.9.3   2023-02-03 [1] CRAN (R 4.3.0)\n ggsci         3.0.0   2023-03-08 [1] CRAN (R 4.3.0)\n glue          1.6.2   2022-02-24 [1] CRAN (R 4.3.0)\n gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)\n here        * 1.0.1   2020-12-13 [1] CRAN (R 4.3.0)\n hms           1.1.3   2023-03-21 [1] CRAN (R 4.3.0)\n htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)\n htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.0)\n jsonlite      1.8.4   2022-12-06 [1] CRAN (R 4.3.0)\n knitr         1.42    2023-01-25 [1] CRAN (R 4.3.0)\n labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)\n lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)\n magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n maps        * 3.4.1   2022-10-30 [1] CRAN (R 4.3.0)\n munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)\n patchwork   * 1.1.2   2022-08-19 [1] CRAN (R 4.3.0)\n pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig     2.0.3   2019-09-22 [1] CRAN (R 4.3.0)\n purrr       * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)\n R6            2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp          1.0.10  2023-01-22 [1] CRAN (R 4.3.0)\n readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)\n rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)\n rprojroot     2.0.3   2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.3.0)\n scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)\n tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.3.0)\n timechange    0.2.0   2023-01-11 [1] CRAN (R 4.3.0)\n tzdb          0.3.0   2022-03-28 [1] CRAN (R 4.3.0)\n utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.0)\n vctrs         0.6.2   2023-04-19 [1] CRAN (R 4.3.0)\n withr         2.5.0   2022-03-03 [1] CRAN (R 4.3.0)\n xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)\n yaml          2.3.7   2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /home/faalm/R/x86_64-pc-linux-gnu-library/4.3\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n",
    "supporting": [
      "03_exploring_summary_stats_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}