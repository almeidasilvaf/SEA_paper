{
  "hash": "8315d3484f0112701c3bd72290d212f3",
  "result": {
    "markdown": "---\nexecute: \n  eval: false\n  echo: true\n  warning: false\n---\n\n\n# Appendices {.unnumbered}\n\n## Creating paper figures\n\nBelow you can find the code used to create the figures in the paper.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(here)\nlibrary(maps)\nlibrary(magick)\nlibrary(ggplotify)\nlibrary(ggpubr)\nset.seed(123)\n\n# ---- Figure 1 ----\n## Load data\nload(here(\"data\", \"metadata_atlas_v2_downloaded.rda\"))\nload(here(\"products\", \"result_files\", \"fastp_stats.rda\"))\nload(here(\"products\", \"result_files\", \"mapping_rate_salmon.rda\"))\n\nfastp_sample_stats <- left_join(\n    fastp_stats, metadata_atlas_v2_downloaded[, c(\"BioSample\", \"Run\")],\n    by = c(\"Sample\" = \"Run\")\n) |>\n    distinct(BioSample, .keep_all = TRUE)\n\n##----1A: Workflow----\np_1a <- ggplot() + theme_void() # workflow image will be manually added later\n\n##----1B: Barplot of samples that passed and failed QC----\ndata_1b <- data.frame(\n    Group = c(\"Initial\", \"Checkpoint 1\", \"Checkpoint 2\"),\n    Frequency = c(\n        # Initial\n        length(unique(metadata_atlas_v2_downloaded$BioSample)),\n        # Passed checkpoint 1 (sequence QC)\n        fastp_stats |>\n            filter(after_meanlength >= 40) |>\n            filter(after_q20rate >= 0.8) |>\n            left_join(metadata_atlas_v2_downloaded, by = c(\"Sample\" = \"Run\")) |>\n            pull(BioSample) |> \n            unique() |> \n            length(),\n        # Passed checkpoint 2 (mapping rates)\n        mapping_rate |>\n            filter(Mapping_rate >= 50) |> \n            pull(BioSample) |>\n            unique() |>\n            length()\n    )\n) |>\n    mutate(Difference = c(NA, diff(Frequency)))\n\np_1b <- ggplot(data_1b, aes(y = fct_reorder(Group, Frequency), x = Frequency)) +\n    geom_bar(\n        stat = \"identity\", fill = c(\"dodgerblue3\", \"brown2\", \"firebrick\"),\n        color = \"black\"\n    ) +\n    labs(\n        title = \"Number of BioSamples after each filtering step\",\n        subtitle = \"Numbers inside bars indicate removed samples\",\n        y = \"\", x = \"Number of samples\"\n    ) +\n    geom_text(aes(label = Frequency), hjust = -0.3) +\n    geom_text(aes(label = Difference), hjust = 1.5, color = \"white\", fontface = \"bold\") +\n    theme_bw() +\n    xlim(0, 8000) \n\n\n##----1C: Distribution of read length\np_1c <- fastp_sample_stats |>\n    filter(after_meanlength <= 150) |>\n    ggplot(aes(x = after_meanlength)) +\n    geom_density(fill = \"grey85\", color = \"gray30\") +\n    theme_bw() +\n    labs(\n        title = \"Distribution of mean read lengths per sample\",\n        subtitle = \"Dashed line indicates the minimum length in checkpoint 1\",\n        x = \"\", y = \"Density\"\n    ) +\n    geom_vline(xintercept = 40, color = \"firebrick\", linetype = \"dashed\")\n    \n\n##----1D: Distribution of Q20 rates----\np_1d <- fastp_sample_stats |>\n    filter(after_meanlength <= 150) |>\n    mutate(after_q20rate = as.numeric(after_q20rate)) |>\n    ggplot(aes(x = after_q20rate)) +\n    geom_density(fill = \"lightskyblue1\", color = \"gray30\") +\n    theme_bw() +\n    geom_vline(xintercept = 0.8, color = \"firebrick\", linetype = \"dashed\") +\n    labs(\n        title = \"Distribution of Q20 rates per sample\",\n        subtitle = \"Dashed line indicates the minimum rate in checkpoint 1\",\n        x = \"\", y = \"Density\"\n    )\n\np_1d\n\n\n##----1E: Distribution of quasi-mapping rates----\np_1e <- mapping_rate |>\n    mutate(Mapping_rate = Mapping_rate / 100) |>\n    ggplot(aes(x = Mapping_rate)) +\n    geom_density(fill = \"lemonchiffon2\", color = \"gray30\") +\n    theme_bw() +\n    geom_vline(xintercept = 0.5, color = \"firebrick\", linetype = \"dashed\") +\n    labs(\n        title = \"Distribution of mapping rates per sample\",\n        subtitle = \"Dashed line indicates the rate in checkpoint 2\",\n        x = \"\", y = \"Density\"\n    )\n\n\n##----1F: Distribution of number of reads---\np_1f <- fastp_sample_stats |>\n    filter(after_meanlength <= 150) |>\n    filter(after_nreads <= 1600 * 1e6 & after_nreads > 0) |>\n    mutate(after_nreads = after_nreads / 1e6) |>\n    ggplot(aes(x = after_nreads)) +\n    geom_density(fill = \"darkseagreen3\", color = \"gray30\") +\n    theme_bw() +\n    labs(\n        title = \"Distribution of number of reads (in millions) per sample\",\n        x = \"\", y = \"Density\"\n    )\n\n## Combine plots\nfig1 <- wrap_plots(\n    wrap_plots(\n        p_1a, \n        p_1b + theme(\n            axis.text.y = element_text(size = 12)\n        ), \n        heights = c(4, 1), nrow = 2\n    ), \n    wrap_plots(\n        p_1c, p_1d, p_1e, p_1f,\n        ncol = 1\n    )\n) +\n    plot_annotation(tag_levels = \"A\")\n\n## Combine workflow (fig 1A) and other panels\ntemp_fig1 <- tempfile(fileext = \".pdf\")\nggsave(\n    fig1, filename = temp_fig1,\n    width = 11, height = 13\n)\n\nfig1a <- image_read_svg(\n    here(\"products\", \"figs\", \"atlas_workflow_paper.svg\")\n)\nfig1rest <- image_read_pdf(temp_fig1)\n\nfig1_final <- image_composite(\n    fig1rest, image_scale(fig1a, \"x2900\")\n)\n\n## Save figure 1\nimage_write(\n    fig1_final, \n    path = here(\"products\", \"figs\", \"figure1.pdf\"),\n    format = \"pdf\"\n)\n\nimage_write(\n    fig1_final, \n    path = here(\"products\", \"figs\", \"figure1.png\"),\n    format = \"png\",\n    density = 300\n)\n\n\n#----Figure 2-----\nload(here(\"products\", \"plots\", \"p_tsne_optimal_perplexity.rda\"))\nload(here(\"products\", \"plots\", \"p_umap_optimal_nneighbors.rda\"))\nload(here(\"products\", \"plots\", \"p_samples_per_body_part.rda\"))\n\n##----2A: Barplot of number of samples per tissue\nparts <- png::readPNG(\n    here(\"products\", \"figs\", \"soybean_parts_colored.png\"),\n    native = TRUE\n)\n\n\np_2a <- p_samples_per_body_part$data |>\n    left_join(\n        data.frame(\n            Part = c(\n                \"Leaf\", \"Seed\", \"Seed Coat\", \"Root\", \"Embryo\", \"Cotyledon\",\n                \"Shoot\", \"Hypocotyl\", \"Pod\", \"Flower\", \"Endosperm\", \n                \"Suspensor\", \"Seedling\", \"Nodule\"\n            ),\n            n_v1 = c(\n                601, 158, 125, 100, 81, 48, 42, 24, 23, 18, 10, 9, 3, 2\n            )\n        )\n    ) |>\n    mutate(\n        new_n = n - n_v1,\n        new_n = replace_na(new_n, 0),\n        Part = factor(Part, levels = levels(p_samples_per_body_part$data$Part))\n    ) |>\n    mutate(\n        label = case_when(\n            new_n > 0 ~ paste0(\"**\", n, \"**\", \" (+\", new_n, \")\"),\n            TRUE ~ paste0(\"**\", n, \"**\", \"   \")\n        )\n    ) |>\n    ggplot(aes(x = n, y = Part)) +\n    ggpubr::background_image(\n        png::readPNG(\n            here(\"products\", \"figs\", \"bg_gradient_left_right.png\"),\n            native = TRUE\n        )\n    ) +\n    geom_bar(stat = \"identity\", fill = \"#719f2d\") +\n    labs(\n        title = \"Number of samples per body part\",\n        subtitle = \"Numbers in parentheses represent newly added samples\",\n        x = \"Number of samples\", y = \"\"\n    ) +\n    ggtext::geom_richtext(\n        aes(label = label), hjust = -0.1, fill = NA, label.color = NA,\n        size = 4.5\n    ) +\n    ggpubr::theme_pubr() +\n    scale_x_continuous(limits = c(0, 2300), expand = c(0, 0)) +\n    inset_element(\n        parts,\n        left = 0.25,\n        top = 0.95,\n        right = 1,\n        bottom = 0.25\n    ) +\n    theme_void() \n\n\n##----2B: t-SNE representation of samples----\np_2b <- p_tsne_optimal_perplexity$data |>\n    mutate(colour_by = str_to_title(colour_by)) |>\n    # Plot\n    ggplot(aes(x = X, y = Y, color = colour_by)) +\n    ggpubr::background_image(\n        png::readPNG(\n            here(\"products\", \"figs\", \"bg_gradient_bottom_top.png\"),\n            native = TRUE\n        )\n    ) +\n    geom_point(alpha = 0.5) +\n    ggsci::scale_color_d3(palette = \"category20\") +\n    theme(\n        legend.key = element_blank(),\n        legend.position = \"right\"\n    ) +\n    labs(\n        color = \"Body part\",\n        title = \"t-SNE representation of all samples\",\n        subtitle = \"Top 8 principal components, perplexity = 60\",\n        x = \"t-SNE 1\", y = \"t-SNE 2\"\n    )\n\n\np_2b\n\n\n##----2C: UMAP representation of samples----\np_2c <- p_umap_optimal_nneighbors$data |>\n    mutate(colour_by = str_to_title(colour_by)) |>\n    # Plot\n    ggplot(aes(x = X, y = Y, color = colour_by)) +\n    ggpubr::background_image(\n        png::readPNG(\n            here(\"products\", \"figs\", \"bg_gradient_bottom_top.png\"),\n            native = TRUE\n        )\n    ) +\n    geom_point(alpha = 0.5) +\n    ggsci::scale_color_d3(palette = \"category20\") +\n    theme(\n        legend.key = element_blank(),\n        legend.position = \"right\"\n    ) +\n    labs(\n        color = \"Body part\",\n        x = \"UMAP 1\", y = \"UMAP 2\",\n        title = \"UMAP representation of all samples\",\n        subtitle = \"Top 8 principal components, n_neighbors = 30\"\n    )\n\np_2c\n\n\n## Combine plots\nfig2 <- wrap_plots(\n    p_2a,\n    wrap_plots(p_2b, p_2c, ncol = 1) +\n        plot_layout(guides = \"collect\"),\n    ncol = 2, widths = c(1.5, 1)\n) +\n    plot_annotation(tag_levels = list(c(\"A\", \"\", \"B\", \"C\")))\n\nfig2\n\n\n## Save figure 2\nggsave(\n    fig2, filename = here(\"products\", \"figs\", \"figure2.png\"),\n    width = 16, height = 10, dpi = 300\n)\n\nggsave(\n    fig2, filename = here(\"products\", \"figs\", \"figure2.pdf\"),\n    width = 14, height = 10\n)\n\n#----Figure 3----\n## Load data\nload(here(\"products\", \"plots\", \"p_heatmap_median.rda\"))\nload(here(\"products\", \"plots\", \"p_heatmap_specific_tfs.rda\"))\nload(here(\"products\", \"plots\", \"p_upset.rda\"))\nload(here(\"products\", \"plots\", \"p_genes_per_group.rda\"))\n\n## Enhance graphical details\n### Change title of barplot\np_genes_per_group <- p_genes_per_group + \n    labs(title = \"Genes per expression group\") +\n    xlim(0, 40000)\n\n### Add title to UpSet plot\np_upset@column_title <- \"Overlap among body part-specific genes\"\n\n### Change title and fontface of heatmap from bold to plain\np_heatmap_median@column_title_param$gp$font <- 1\np_heatmap_median@column_title <- \"Expression of body part-specific genes\"\n\n### Change fontface of heatmap from bold to plain\np_heatmap_specific_tfs@column_title_param$gp$font <- 1\n\n## Combine plots\nfig3 <- ggarrange(\n    ## First row\n    ggarrange(\n        p_genes_per_group, as.ggplot(p_upset), nrow = 1, \n        widths = c(1,3), labels = list(\"A\", \"B\")\n    ),\n    ## Second row\n    ggarrange(\n        as.ggplot(p_heatmap_median), as.ggplot(p_heatmap_specific_tfs), \n        nrow = 1, widths = c(1, 2), labels = list(\"C\", \"D\")\n    ),\n    nrow = 2\n)\n\n## Save figure 3\nggsave(\n    fig3, \n    filename = here(\"products\", \"figs\", \"figure3.pdf\"),\n    width = 15, height = 12\n)\n\nimage_read_pdf(here(\"products\", \"figs\", \"figure3.pdf\")) |>\n    image_write(\n        path = here(\"products\", \"figs\", \"figure3.png\"),\n        density = 300\n    )\n\n\n#----Figure 4-----\n## Load data\nload(here(\"products\", \"plots\", \"p_map_samples_per_country.rda\"))\nload(here(\"products\", \"plots\", \"p_barplot_samples_per_country.rda\"))\nload(here(\"products\", \"plots\", \"p_nsamples_over_time_cumsum.rda\"))\nload(here(\"products\", \"plots\", \"p_seqtech_layout_count.rda\"))\ntop_producers <- c(\n    \"Brazil\", \"USA\", \"Argentina\", \"China\", \"India\", \"Paraguay\", \"Canada\"\n)\n\n##----4A and 4B: World map + samples per country----\np_4ab <- wrap_plots(\n    p_map_samples_per_country, \n    p_barplot_samples_per_country +\n        labs(\n            subtitle = \"Blue bars indicate world leaders in soybean production\"\n        ) +\n        theme(\n            axis.text.y = element_text(size = 11)\n        ),\n    widths = c(2, 1)\n)\n\n##----4C: Time-series: number of samples over time-----\np_4c <- p_nsamples_over_time_cumsum\np_4c$layers[[3]] <- NULL\np_4c <- p_4c +\n    labs(\n        subtitle = \"Samples that were filtered out in the SEA v2 were not included\"\n    ) +\n    annotate(\n        \"text\",\n        x = as.Date(\"2015-01-01\"), y = 3500,\n        label = \"Last download for the SEA v1\",\n        color = \"gray20\"\n    )\n\n\n##----4D: sequencing stats----\np_4d <- p_seqtech_layout_count +\n    labs(title = \"Summary sequencing statistics\") +\n    theme(\n        axis.text.y = element_text(size = 11),\n        strip.text.y = element_text(size = 11)\n    )\n\n\n## Combine plots\nfig4 <- wrap_plots(\n    p_4ab,\n    wrap_plots(p_4c, p_4d),\n    nrow = 2\n) +\n    plot_annotation(tag_levels = list(c(\"A\", \"B\", \"C\", \"D\")))\n\n\n## Save figure 4\nggsave(\n    fig4, filename = here(\"products\", \"figs\", \"figure4.png\"),\n    width = 15, height = 12, dpi = 300\n)\n\nggsave(\n    fig4, filename = here(\"products\", \"figs\", \"figure4.pdf\"),\n    width = 13, height = 12\n)\n\n\n#----Supplementary Figure S1----------------------------------------------------\n## Load data\nload(here(\"products\", \"plots\", \"p_pca_percent_var.rda\"))\nload(here(\"products\", \"plots\", \"p_fit_mean_var.rda\"))\n\n## Combine plots\nsf1 <- wrap_plots(p_fit_mean_var, p_pca_percent_var) +\n    plot_annotation(tag_levels = \"A\")\n\n## Save figure    \nggsave(\n    sf1, \n    file = here(\"products\", \"figs\", \"supplementary_figure1.png\"),\n    width = 15, height = 9, dpi = 300\n)\n\nggsave(\n    sf1, \n    file = here(\"products\", \"figs\", \"supplementary_figure1.pdf\"),\n    width = 15, height = 9\n)\n\n\n#----Supplementary Figure S2----------------------------------------------------\n## Load data\nload(here(\"products\", \"plots\", \"p_heatmap_terms_pav.rda\"))\n\nsf2 <- as.ggplot(p_heatmap_terms_pav)\n\nggsave(\n    sf2, \n    file = here(\"products\", \"figs\", \"supplementary_figure2.pdf\"),\n    width = 10, height = 12\n)\n\nimage_read_pdf(here(\"products\", \"figs\", \"supplementary_figure2.pdf\")) |>\n    image_write(\n        path = here(\"products\", \"figs\", \"supplementary_figure2.png\"),\n        density = 300\n    )\n\n#----Supplementary Figure S3----------------------------------------------------\n## Load data\nload(here(\"products\", \"plots\", \"p_bodypart_timeseries.rda\"))\nload(here(\"products\", \"plots\", \"p_layout_timeseries.rda\"))\nload(here(\"products\", \"plots\", \"p_seqtech_timeseries.rda\"))\n\n\n## Combine plots\nsf3 <- wrap_plots(\n    p_bodypart_timeseries +\n        guides(color = guide_legend(ncol = 1)) +\n        theme(legend.position = \"right\"),\n    p_layout_timeseries + \n        guides(color = guide_legend(ncol = 1)) +\n        theme(legend.position = \"right\"),\n    p_seqtech_timeseries +\n        guides(color = guide_legend(ncol = 1)) +\n        theme(legend.position = \"right\"),\n    nrow = 3\n) +\n    plot_annotation(tag_levels = \"A\")\n\n\n## Save figure\nggsave(\n    sf3, \n    file = here(\"products\", \"figs\", \"supplementary_figure3.png\"),\n    width = 9, height = 11, dpi = 300\n)\n\nggsave(\n    sf2, \n    file = here(\"products\", \"figs\", \"supplementary_figure2.pdf\"),\n    width = 9, height = 11\n)\n```\n:::\n\n\n## Creating paper tables\n\nBelow you can find the code used to create the tables in the paper.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(tidyverse)\nset.seed(123)\n\nload(here(\"data\", \"metadata_atlas_v2_downloaded.rda\"))\n\n#----Supplementary Table S1-----------------------------------------------------\n## Sequence QC stats\nload(here(\"products\", \"result_files\", \"fastp_stats.rda\"))\nsup_table1 <- fastp_stats |>\n    dplyr::rename(Run = Sample) |>\n    left_join(\n        metadata_atlas_v2_downloaded |>\n            select(BioSample, Run, BioProject)\n    ) |>\n    dplyr::select(BioProject, BioSample, Run, 3:24)\n\nwrite_tsv(\n    sup_table1,\n    file = here(\"products\", \"tables\", \"supplementary_table_S1.tsv\")\n)\n\n#----Supplementary Table S2----------------------------------------------------\n## Mapping stats\nload(here(\"products\", \"result_files\", \"mapping_rate_salmon.rda\"))\n\nsup_table2 <- metadata_atlas_v2_downloaded |>\n    select(BioSample, BioProject) |>\n    inner_join(mapping_rate)\n\nwrite_tsv(\n    sup_table2,\n    file = here(\"products\", \"tables\", \"supplementary_table_S2.tsv\")\n)\n```\n:::\n",
    "supporting": [
      "appendices_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}